% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/getLayer.R
\name{getLayer}
\alias{getLayer}
\title{Subset, and/or summarize HarvestChoice 5-arc-minute spatial indicators}
\usage{
getLayer(var, iso3 = "SSA", by = NULL, ids = NULL, collapse = TRUE,
  as.class = "data.table")
}
\arguments{
\item{var}{character array of variable names (all types are accepted)}

\item{iso3}{optional array of country or regional codes to filter by (3-letter code)}

\item{by}{optional character array of variables to group by (all types are accepted)}

\item{ids}{optional gridcell ids to return (if collapse=F) or summarize by (if collapse=T)}

\item{collapse}{if FALSE always return all pixel values (useful for plotting and to
convert to spatial formats)}

\item{as.class}{one of "data.table" (default) or "list". By default returns a simple data.table.
If \code{as.class="list"} returns a well-constructed list with variable metadata}
}
\value{
a data.table (or json array) of \code{var} indicators aggregated by \code{by} domains
}
\description{
Workhorse method to subset and/or aggregate HarvestChoice layers.
This method also aggregates classified variables by continuous variables.\\
e.g. \code{getLayer(var=c("whea_h", "AEZ16_CLAS"), by=c("ADM2_NAME_ALT", "bmi"))}.
It does so by returning the dominant class of a classified variable within each \code{by}
class, and by automatically classifying any continuous variable passed to \code{by}
using default value breaks as specified in the variable metadata.
The formula used to aggregate classified variables by choosing the dominant class is
\code{names(sort(table({varCode}), decreasing=T)[1])}. This formula computes the
frequency of each class, ranks them by decreasing frequency, and retains the top one.
Layers can also be summarized over a spatial area (passed as an integer array of CELL5M ids).
Note that calling \code{getLayer(...)} is equivalent to using the convenience method
\code{hcapi(...)} with the same arguments.
}
\examples{
# Mean BMI and cassava yield across districts in Tanzania
x <- hcapi(c("bmi", "cass_y"), iso3="TZA", by=c("ADM1_NAME_ALT", "ADM2_NAME_ALT"))
x

# Plot results for Mara province
require(lattice)
barchart(ADM2_NAME_ALT~bmi, data=x[ADM1_NAME_ALT=="Mara"])

# Mean BMI and cassava yield across districts in Tanzania in GeoTIFF
x <- hcapi("bmi", iso3="TZA", format="tif")
x

# Load the generated TIF raster (one band only)
require(raster)
x <- raster(x[1])

# Plot the `bmi` series
plot(x)

# Equivalent request at the command line
# curl http://hcapi.harvestchoice.org/ocpu/library/hcapi3/R/hcapi \\
# -d '{"var":"bmi", "iso3":"TZA", "format":"tif"}' \\
# -X POST -H 'Content-Type:application/json'

# /ocpu/tmp/x0bc1ac9bdf/R/.val
# /ocpu/tmp/x0bc1ac9bdf/stdout
# /ocpu/tmp/x0bc1ac9bdf/warnings
# /ocpu/tmp/x0bc1ac9bdf/source
# /ocpu/tmp/x0bc1ac9bdf/console
# /ocpu/tmp/x0bc1ac9bdf/info
# /ocpu/tmp/x0bc1ac9bdf/files/bmi--TZA.tfw
# /ocpu/tmp/x0bc1ac9bdf/files/bmi--TZA.tif
# /ocpu/tmp/x0bc1ac9bdf/files/bmi--TZA.tif.aux.xml
# /ocpu/tmp/x0bc1ac9bdf/files/DESCRIPTION
# /ocpu/tmp/x0bc1ac9bdf/files/README

# Use wget (at the command line) to download all generated files in a ZIP archive
# wget http://hcapi.harvestchoice.org/ocpu/tmp/x0bc1ac9bdf/zip

# The method may be expanded to summarize classified (discrete) variables by continuous
# variables. For example the call below returns the dominant agro-ecological zone and
# average stunting in children under 5 over Ivory Coast's provinces by elevation class
hcapi(c("AEZ8_CLAS", "stunted_moderate"), iso3="CIV", by=c("ADM1_NAME_ALT", "ELEVATION"))

# An equivalent request at the command line
# curl http://hcapi.harvestchoice.org/ocpu/library/hcapi3/R/hcapi/json \\
# -d '{"var":["AEZ8_CLAS","stunted_moderate"], "iso3":"CIV", "by":["ADM1_NAME_ALT","ELEVATION"]}' \\
# -X POST -H 'Content-Type:application/json'
}

