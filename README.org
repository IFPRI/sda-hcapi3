#+TITLE: HCAPI3
#+AUTHOR: Melanie Bacou
#+EMAIL: mel@mbacou.com
#+DATE: {{{modification-time(%Y-%m-%d)}}}

#+OPTIONS: H:2 num:1 toc:2 \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+LaTeX_CLASS: mel-article
#+STARTUP: indent showstars

Port of HarvestChoice Data Services to OpenCPU Server http://198.105.216.164/ocpu/library/hcapi3.

Documentation for each method can be accessed using =/man/<method>=, for example at http://198.105.216.164/ocpu/library/hcapi3/man/getLayer
also in PDF format at
http://198.105.216.164/ocpu/library/hcapi3/man/getLayer/pdf

HTTP GET and POST requests can be tested at http://198.105.216.164/ocpu/.

Javascript client code is also available.

#+BEGIN_SRC javascript

// OpenCPU requires jquery
<script src="js/jquery.js"></script>
<script src="js/opencpu.js"></script>

// Set page to communicate with "hcapi3" package on server
ocpu.seturl("//198.105.216.164/ocpu/library/hcapi3/R")

// JavaScript client code
var layer = $("#layer").val();
var req = $("#plotdiv").rplot("getPlot", { var : layer })

// Optional: add custom callbacks
req.fail(function(){
    alert("R returned an error: " + req.responseText);
});

// Toy example
var req = ocpu.call("getLayer", {
   var: ["maiz_h", "maiz_y"], by: ["wealth", "AEZ16_CLAS"], iso3: "GHA"},

   function(session){

    //read the session properties (just for fun)
    $("#key").text(session.getKey());
    $("#location").text(session.getLoc());

    //retrieve session console (stdout) async
    session.getConsole(function(outtxt){
        $("#output").text(outtxt);
    });

    //retrieve the returned object async
    session.getObject(function(data){
        //data is the object returned by the R function
        alert("Array of length " + data.length + ".\nFirst few values:" + data.slice(0,3));
    });
})
#+END_SRC

Or in the console,

#+BEGIN_SRC sh
// Example #1 (takes 2 calls to generate and download file)
$ curl http://198.105.216.164/ocpu/library/hcapi3/R/genFile -d "{var: 'whea_h', iso3: 'GHA', by: 'ADM2_NAME_ALT', format: 'dta'}" -X POST
/ocpu/tmp/x0a3355977c/R/.val
/ocpu/tmp/x0a3355977c/messages
/ocpu/tmp/x0a3355977c/stdout
/ocpu/tmp/x0a3355977c/source
/ocpu/tmp/x0a3355977c/console
/ocpu/tmp/x0a3355977c/info
/ocpu/tmp/x0a3355977c/files/DESCRIPTION
/ocpu/tmp/x0a3355977c/files/whea_h-ADM2_NAME_ALTGHAdta.dta

$ wget http://198.105.216.164/ocpu/tmp/x0a3355977c/files/whea_h-ADM2_NAME_ALTGHAdta.dta

// Example #2 with timings
$ time curl http://198.105.216.164/ocpu/library/hcapi3/R/genFile -d "var='whea_h'&iso3='GHA'&format='tif'" -X POST
/ocpu/tmp/x079f3481fd/R/.val
/ocpu/tmp/x079f3481fd/messages
/ocpu/tmp/x079f3481fd/stdout
/ocpu/tmp/x079f3481fd/source
/ocpu/tmp/x079f3481fd/console
/ocpu/tmp/x079f3481fd/info
/ocpu/tmp/x079f3481fd/files/DESCRIPTION
/ocpu/tmp/x079f3481fd/files/README
/ocpu/tmp/x079f3481fd/files/whea_h-GHAtif.tfw
/ocpu/tmp/x079f3481fd/files/whea_h-GHAtif.tif

real    0m6.974s
user    0m0.000s
sys     0m0.015s

$ time wget http://198.105.216.164/ocpu/tmp/x079f3481fd/files/whea_h-GHAtif.tif
--2014-11-03 23:27:16--  http://198.105.216.164/ocpu/tmp/x079f3481fd/files/whea_h-GHAtif.tif
Connecting to 198.105.216.164:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: unspecified [image/tiff]
Saving to: ‘whea_h-GHAtif.tif’

whea_h-GHAtif.tif            [ <=>                                 ]  17.31K  --.-KB/s   in 0.06s

2014-11-03 23:27:17 (291 KB/s) - ‘whea_h-GHAtif.tif’ saved [17728]

real    0m0.255s
user    0m0.000s
sys     0m0.030s
#+END_SRC


